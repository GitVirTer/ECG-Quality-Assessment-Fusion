function [net, trainInfo, lgraph] = trainModel(XTrain,YTrain,XVal,YVal,lgraph)

maxEpochs = 200;
miniBatchSize = 128;
validationFrequency = 5*ceil(numel(YTrain)/miniBatchSize);
% validationFrequency = 1;

lr_start = 1e-4;
lr_end = 1e-5;
lr_drop_period = 50;
lr_factor = (lr_end/lr_start)^(1/(maxEpochs/lr_drop_period));

options = trainingOptions('adam', ...
'L2Regularization', 5e-4, ...
'InitialLearnRate',lr_start, ...
'MaxEpochs',maxEpochs, ...
'MiniBatchSize',miniBatchSize, ...
'LearnRateSchedule','piecewise',...
'LearnRateDropFactor',lr_factor,...
'LearnRateDropPeriod',lr_drop_period,...
'ValidationData', {XVal, YVal},...
'ValidationFrequency',validationFrequency, ...
'Shuffle','every-epoch', ...
'ValidationPatience',inf,...
'Verbose',true, ...
'ExecutionEnvironment', 'gpu',...
'Plots','none',...
'CheckpointPath', []); 


[net, trainInfo] = trainNetwork(XTrain,YTrain,lgraph,options);
% plotNetWeight(net);

end
